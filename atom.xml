<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lytqwq</title>
  
  
  <link href="http://liyuting233.github.io/atom.xml" rel="self"/>
  
  <link href="http://liyuting233.github.io/"/>
  <updated>2021-02-03T10:28:19.444Z</updated>
  <id>http://liyuting233.github.io/</id>
  
  <author>
    <name>liyuting</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOIP2020</title>
    <link href="http://liyuting233.github.io/2021/02/03/NOIP2020/"/>
    <id>http://liyuting233.github.io/2021/02/03/NOIP2020/</id>
    <published>2021-02-03T09:52:29.000Z</published>
    <updated>2021-02-03T10:28:19.444Z</updated>
    
    <content type="html"><![CDATA[<h1 id="day-space"><a href="#day-space" class="headerlink" title="$day \space -? $"></a>$day \space -? $</h1><p>花了$0.1ms$接受自己$CSP2020$爆炸的事实</p><h1 id="day-space-inf"><a href="#day-space-inf" class="headerlink" title="$day \space -inf $"></a>$day \space -inf $</h1><p>停了课，可以打CF啦，开心/cy</p><p>在机房一个人自闭，有人能带带我吗/kk</p><h1 id="11-23"><a href="#11-23" class="headerlink" title="$11/23$"></a>$11/23$</h1><p>一天想一道题，还**没想明白，自闭了</p><h1 id="11-30"><a href="#11-30" class="headerlink" title="$11/30$"></a>$11/30$</h1><p>牛客中了件衣服，这还是我第一次中东西，有生之年.jpg</p><p>发生了一些不好的事，让我有一（？）点自闭</p><p>看上次的$CSP2020$游记发现自己又又又又忘了复习那几样了 $/kk$ ，就赶紧敲了树剖板子，把之前3.5k的板子压成2.9k，加取模3.1k，找了两道题做</p><h1 id="day-space-1"><a href="#day-space-1" class="headerlink" title="$day \space -1$"></a>$day \space -1$</h1><p>向$GNAQ$学长要了一些学习资源，试图$NOIP$挣扎一下，虽然是有亿点晚（？）</p><h1 id="day-space-0"><a href="#day-space-0" class="headerlink" title="$day \space 0$"></a>$day \space 0$</h1><p>上午颓废一会就去日照了…</p><h1 id="day-space-1-1"><a href="#day-space-1-1" class="headerlink" title="$day \space 1$"></a>$day \space 1$</h1><p>睡了一觉$day1$了？？？</p><p>睡了$8$小时，几乎从来没睡这么久，但还是有点打盹…</p><p>进考场，坐下开始试机，打网络流的时候发现自己坐错位置了，尴尬…</p><p>发题，看了看题目名，嗯，挺正常，打开$ball$文件夹。蛤？这啥啊？为啥有$checker$这是要$NOIP$考交互的节奏吗？瞬间好慌…</p><p>发密码了，看到$T3$传统型有点奇怪…</p><p>看$t1$</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">你们可能不知道，开场就会t1是什么概念。我们只会用两个字来形容这种人，巨捞。</span><br><span class="line">我常说一句话，当年tourist他能场场ak，我卢本伟用<span class="number">40</span>min切掉t1，不是问题。</span><br><span class="line">埋伏他一手，这个高精不能写，这个高精不用写，这个题切定了。</span><br><span class="line">反手给一个拓扑排序闷声发大财，他也提醒写高精？但是不用怕，他的构造卡不死我。手写分数，重载运算符，很牛逼这个写法，如果能用逆元，我这个题可以很短，可惜用不得。</span><br><span class="line">d≤<span class="number">5</span>，傻逼，直接把freopen写了。</span><br><span class="line">走他个大样例。阿姨大点，阿姨，阿姨你怎么才<span class="number">1000</span>啊？阿姨你大点啊阿姨，别这么吝啬的。输出结果，失误了，应该先写个比较程序的。</span><br><span class="line">给阿姨倒杯茶好吧，给阿姨倒一杯卡布奇诺，给阿姨，倒一杯，卡布奇诺，开始你的数据秀。过掉，过掉，漂亮！</span><br><span class="line">最后一个点你能秒我？你能秒杀我？你今天能最后一个点把我卢本伟秒了，我当场，就把这个电脑屏幕吃掉。</span><br><span class="line">RunError on test <span class="number">20.</span></span><br></pre></td></tr></table></figure><p>$T2$瞎写了个双$hash$，本地极限数据10s…</p><p>$T3$啥啊？放了</p><p>$T4$写了个40分部分分跑了</p><p>发现就30min了，$T3$写了个rand乱搞，不指望骗几分了</p><p>期望分数：80+80+0+40=200</p><p>哎，期望分都这样，停了这么久课，学的东西几乎全都没考，$T3$人均比我高40+分，$NOIP$考这种题就离谱，我心态崩了啊，回去文化课还要被吊打，我本来文化课久不好，在小县城都要在50多名上徘徊，没有那种神仙的光速补文化课的能力，现在退役怎么办啊…</p><p>洛谷数据：$90+84+0+40=214$</p><p>oitiku：$100+84+5+40=229$</p><p>哎，还没$CSP$考得高，退役了</p><p>实际：$90+84+5+35=214$</p><p>$T4$被没写$-1$被扣了5分/px</p><p>如果在浙江连省一好像都没有，我太菜了…</p><p>好像还有翻盘进队的希望（？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;day-space&quot;&gt;&lt;a href=&quot;#day-space&quot; class=&quot;headerlink&quot; title=&quot;$day \space -? $&quot;&gt;&lt;/a&gt;$day \space -? $&lt;/h1&gt;&lt;p&gt;花了$0.1ms$接受自己$CSP2020$爆炸的事实&lt;</summary>
      
    
    
    
    
    <category term="游记" scheme="http://liyuting233.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CF1399E2 Weights Division (hard version)</title>
    <link href="http://liyuting233.github.io/2020/08/18/CF1399E2%20Weights%20Division%20(hard%20version)/"/>
    <id>http://liyuting233.github.io/2020/08/18/CF1399E2%20Weights%20Division%20(hard%20version)/</id>
    <published>2020-08-18T02:16:29.000Z</published>
    <updated>2020-08-18T03:26:32.792Z</updated>
    
    <content type="html"><![CDATA[<p>题目链接：<a href="https://www.luogu.com.cn/problem/CF1399E2">https://www.luogu.com.cn/problem/CF1399E2</a></p><p>我们先计算出每条边对叶子节点的贡献次数，用一遍<strong>DFS</strong>就能解决</p><p>然后开个结构体储存边的信息：</p><ol><li>对叶子节点贡献次数 <strong>Vis</strong></li><li>当前权值 <strong>Wi</strong></li><li>改变的花费 <strong>Ci</strong></li></ol><p>一个错误的贪心就是按照 <strong>Vis×(Wi-Wi/2)×1.0÷Ci</strong>排，开优先队列，然后从大到小选。因为可能后面有更好的选择</p><p>考虑到<strong>Ci&lt;=2</strong>，我们开三个优先队列，一个存所有<strong>Ci</strong>的情况，一个开<strong>Ci=1</strong>的，一个开<strong>Ci=2</strong>的。按照 <strong>Vis×(Wi-Wi/2)×1.0÷Ci</strong>排。</p><p>当<strong>Ci=1</strong>的优先队列的队首可以直接完成要求，就选它后<strong>break</strong>。当<strong>Ci=2</strong>的优先队列的队首可以完成要求就选它，然后检查前面<strong>Ci=1</strong>的选过的元素中有没有可以放弃的。</p><p>如果不能直接完成要求，我们就直接找<strong>Ci</strong>所有情况的队首。</p><p>时间复杂度<strong>O(nlogn)</strong> ，比之前题解都少了一个<strong>log</strong>！！！！！！！</p><p>（鬼知道为什么我还比他们跑的慢/kk</p><p>AC情况：<a href="https://www.luogu.com.cn/record/37201605">https://www.luogu.com.cn/record/37201605</a></p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> S,qaq;</span><br><span class="line"><span class="keyword">int</span> Head[N],cnt,Next[N*<span class="number">2</span>],V[N*<span class="number">2</span>],W[N*<span class="number">2</span>],C[N*<span class="number">2</span>],ovo[N*<span class="number">2</span>],f[N*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> bef;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">d</span>&#123;</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> Wi,Ci,Vis;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> d x) <span class="keyword">const</span> &#123;<span class="keyword">return</span> ((Wi-Wi/<span class="number">2</span>)*Vis*<span class="number">1.0</span>/Ci)&lt;((x.Wi-x.Wi/<span class="number">2</span>)*x.Vis*<span class="number">1.0</span>/x.Ci);&#125;</span><br><span class="line">&#125;qwq,ouo;</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;d&gt; Q,Q2,Q3;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    V[cnt]=v;</span><br><span class="line">    W[cnt]=w;</span><br><span class="line">    C[cnt]=c;</span><br><span class="line">    Next[cnt]=Head[u];</span><br><span class="line">    Head[u]=cnt++;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> father)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Head[u];i!=<span class="number">-1</span>;i=Next[i])&#123;</span><br><span class="line">        <span class="keyword">if</span>(V[i]!=father)&#123;</span><br><span class="line">            dfs(V[i],u);</span><br><span class="line">            ovo[i]+=vis[V[i]];</span><br><span class="line">            vis[u]+=vis[V[i]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(vis[u]==<span class="number">0</span>)vis[u]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(Head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(Head));</span><br><span class="line">        <span class="built_in">memset</span>(ovo,<span class="number">0</span>,<span class="keyword">sizeof</span>(ovo));</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        cnt=<span class="number">0</span>;qaq=<span class="number">0</span>;bef=<span class="number">1e18</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%lld&quot;</span>,&amp;n,&amp;S);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> u,v,w,c;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;u,&amp;v,&amp;w,&amp;c);</span><br><span class="line">            add(u,v,w,c);</span><br><span class="line">            add(v,u,w,c);</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">while</span>(!Q.empty())&#123;</span><br><span class="line">            Q.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!Q2.empty())&#123;</span><br><span class="line">            Q2.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!Q3.empty())&#123;</span><br><span class="line">            Q3.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=(<span class="number">2</span>*n<span class="number">-3</span>);i++)&#123;</span><br><span class="line">            qwq.Wi=W[i];</span><br><span class="line">            qwq.Vis=ovo[i];</span><br><span class="line">            qaq+=qwq.Wi*qwq.Vis;</span><br><span class="line">            qwq.Ci=C[i];</span><br><span class="line">            <span class="keyword">if</span>(C[i]==<span class="number">1</span>)&#123;</span><br><span class="line">                Q2.push(qwq);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                Q3.push(qwq);</span><br><span class="line">            &#125;</span><br><span class="line">            Q.push(qwq);</span><br><span class="line">        &#125;</span><br><span class="line">        qaq-=S;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(!Q.empty()&amp;&amp;qaq&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!Q2.empty())&#123;</span><br><span class="line">                ouo=Q2.top();</span><br><span class="line">                <span class="keyword">if</span>(qaq&lt;=ouo.Vis*(ouo.Wi-ouo.Wi/<span class="number">2</span>))&#123;</span><br><span class="line">                    ans+=ouo.Ci;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!Q3.empty())&#123;</span><br><span class="line">                ouo=Q3.top();</span><br><span class="line">                <span class="keyword">if</span>(qaq+bef&lt;=ouo.Vis*(ouo.Wi-ouo.Wi/<span class="number">2</span>))&#123;</span><br><span class="line">                    ans+=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(qaq&lt;=ouo.Vis*(ouo.Wi-ouo.Wi/<span class="number">2</span>))&#123;</span><br><span class="line">                    ans+=ouo.Ci;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            qwq=Q.top();</span><br><span class="line">            ans+=qwq.Ci;</span><br><span class="line">            qaq-=(qwq.Wi-qwq.Wi/<span class="number">2</span>)*qwq.Vis;</span><br><span class="line">            bef=min(bef,(qwq.Wi-qwq.Wi/<span class="number">2</span>)*qwq.Vis);</span><br><span class="line">            qwq.Wi=qwq.Wi/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(qwq.Ci==<span class="number">1</span>)&#123;</span><br><span class="line">                Q2.pop();</span><br><span class="line">                Q2.push(qwq);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                Q3.pop();</span><br><span class="line">                Q3.push(qwq); </span><br><span class="line">            &#125;</span><br><span class="line">            Q.pop();</span><br><span class="line">            Q.push(qwq);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;题目链接：&lt;a href=&quot;https://www.luogu.com.cn/problem/CF1399E2&quot;&gt;https://www.luogu.com.cn/problem/CF1399E2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们先计算出每条边对叶子节点的贡献次数，用一遍&lt;str</summary>
      
    
    
    
    
    <category term="贪心" scheme="http://liyuting233.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>P2604 [ZJOI2010]网络扩容</title>
    <link href="http://liyuting233.github.io/2020/08/17/P2604%20[ZJOI2010]%E7%BD%91%E7%BB%9C%E6%89%A9%E5%AE%B9/"/>
    <id>http://liyuting233.github.io/2020/08/17/P2604%20[ZJOI2010]%E7%BD%91%E7%BB%9C%E6%89%A9%E5%AE%B9/</id>
    <published>2020-08-17T08:16:29.000Z</published>
    <updated>2020-08-17T08:42:53.090Z</updated>
    
    <content type="html"><![CDATA[<p>没想到吧，我就是在开blog第一天写题解哈哈哈哈（其实是测试一下</p><p>虽然现在还没有<strong>LaTeX</strong>，就凑合看吧</p><p>题目链接：<a href="https://www.luogu.com.cn/problem/P4014">https://www.luogu.com.cn/problem/P4014</a></p><p>题意：一个图，求最大流，每个边超过最大流量后才收费用，再求比最大流多流k的最小费用</p><p>第一问肯定就直接建不带费用的边，然后套最大流板子</p><p>对于第二问，我们就再多建一遍带费用的边，最大流量为inf，然后在求费用流时魔改一下，限制再流k的情况：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(flow[t]&gt;k)&#123;</span><br><span class="line">  flow[t]=k;</span><br><span class="line">&#125;</span><br><span class="line">k-=flow[t];</span><br></pre></td></tr></table></figure><p>其实就是板子题了</p><p>AC情况：<a href="https://www.luogu.com.cn/record/37174702">https://www.luogu.com.cn/record/37174702</a></p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1010</span>,M=<span class="number">20010</span>,inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,s,t;</span><br><span class="line"><span class="keyword">int</span> u[M],v[M],w[M],f[M];</span><br><span class="line"><span class="keyword">int</span> cnt,Head[N],Next[M],V[M],F[M],W[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    V[cnt]=v;</span><br><span class="line">    F[cnt]=f;</span><br><span class="line">    W[cnt]=w;</span><br><span class="line">    Next[cnt]=Head[u];</span><br><span class="line">    Head[u]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans,ans2;</span><br><span class="line"><span class="keyword">int</span> flow[N],dis[N],vis[N],pre[N],last[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">0x7f</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(flow,<span class="number">0x7f</span>,<span class="keyword">sizeof</span>(flow));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(s);</span><br><span class="line">    vis[s]=<span class="number">1</span>;</span><br><span class="line">    dis[s]=<span class="number">0</span>;</span><br><span class="line">    pre[t]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> now=Q.front();</span><br><span class="line">        Q.pop();</span><br><span class="line">        vis[now]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Head[now];i!=<span class="number">-1</span>;i=Next[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(W[i]&gt;<span class="number">0</span>&amp;&amp;dis[V[i]]&gt;dis[now]+F[i])&#123;</span><br><span class="line">                dis[V[i]]=dis[now]+F[i];</span><br><span class="line">                pre[V[i]]=now;</span><br><span class="line">                last[V[i]]=i;</span><br><span class="line">                flow[V[i]]=min(flow[now],W[i]);</span><br><span class="line">                <span class="keyword">if</span>(!vis[V[i]])&#123;</span><br><span class="line">                    vis[V[i]]=<span class="number">1</span>;</span><br><span class="line">                    Q.push(V[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pre[t]!=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(spfa())&#123;</span><br><span class="line">        <span class="keyword">int</span> now=t;</span><br><span class="line">        ans+=flow[t];</span><br><span class="line">        ans2+=flow[t]*dis[t];</span><br><span class="line">        <span class="keyword">while</span>(now!=s)&#123;</span><br><span class="line">            W[last[now]]-=flow[t];</span><br><span class="line">            W[last[now]^<span class="number">1</span>]+=flow[t];</span><br><span class="line">            now=pre[now];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dinic2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(spfa()&amp;&amp;k)&#123;</span><br><span class="line">        <span class="keyword">int</span> now=t;</span><br><span class="line">        <span class="keyword">if</span>(flow[t]&gt;k)&#123;</span><br><span class="line">            flow[t]=k;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=flow[t];</span><br><span class="line">        ans2+=flow[t]*dis[t];</span><br><span class="line">        k-=flow[t];</span><br><span class="line">        <span class="keyword">while</span>(now!=s)&#123;</span><br><span class="line">            W[last[now]]-=flow[t];</span><br><span class="line">            W[last[now]^<span class="number">1</span>]+=flow[t];</span><br><span class="line">            now=pre[now];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(Head));</span><br><span class="line">    ans=ans2=<span class="number">0</span>;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        add(u[i],v[i],w[i],<span class="number">0</span>);</span><br><span class="line">        add(v[i],u[i],<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    s=<span class="number">1</span>,t=n;</span><br><span class="line">    Dinic();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ans=ans2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        add(u[i],v[i],inf,f[i]);</span><br><span class="line">        add(v[i],u[i],<span class="number">0</span>,-f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    Dinic2();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;u[i],&amp;v[i],&amp;w[i],&amp;f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    init();</span><br><span class="line">    init2();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;没想到吧，我就是在开blog第一天写题解哈哈哈哈（其实是测试一下&lt;/p&gt;
&lt;p&gt;虽然现在还没有&lt;strong&gt;LaTeX&lt;/strong&gt;，就凑合看吧&lt;/p&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://www.luogu.com.cn/problem/P4014&quot;&gt;</summary>
      
    
    
    
    
    <category term="网络流" scheme="http://liyuting233.github.io/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>About Me</title>
    <link href="http://liyuting233.github.io/2020/08/17/About-Me/"/>
    <id>http://liyuting233.github.io/2020/08/17/About-Me/</id>
    <published>2020-08-17T02:52:29.000Z</published>
    <updated>2020-08-17T08:48:00.954Z</updated>
    
    <content type="html"><![CDATA[<p>SD弱校蒟蒻</p><p>NOIP2018pj卡线一等</p><p>CSP2019tg卡线二等</p><p><a href="https://www.luogu.com.cn/user/104319">洛谷</a></p><p><a href="https://codeforces.ml/profile/liyuting">CF</a> （目前勉强挂在CM）</p><p>正在龟速学习OI，求换友链qwq</p><p>QQ:1451501519（加QQ时留个洛谷ID</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;SD弱校蒟蒻&lt;/p&gt;
&lt;p&gt;NOIP2018pj卡线一等&lt;/p&gt;
&lt;p&gt;CSP2019tg卡线二等&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/user/104319&quot;&gt;洛谷&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://co</summary>
      
    
    
    
    
    <category term="杂" scheme="http://liyuting233.github.io/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://liyuting233.github.io/2020/08/16/hello-world/"/>
    <id>http://liyuting233.github.io/2020/08/16/hello-world/</id>
    <published>2020-08-16T08:58:54.547Z</published>
    <updated>2020-08-16T08:58:54.547Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
